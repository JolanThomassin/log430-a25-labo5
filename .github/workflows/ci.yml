name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}
          MYSQL_DATABASE: labo05_db
          MYSQL_USER: labo05
          MYSQL_PASSWORD: ${{ secrets.DB_PASS }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -uroot -p${{ secrets.DB_ROOT_PASSWORD }} --silent"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=20

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping || exit 1"
          --health-interval=5s
          --health-timeout=3s
          --health-retries=20

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest redis mysql-connector-python

      - name: Create .env file
        run: |
          {
            echo "DB_HOST=127.0.0.1"
            echo "DB_PORT=3306"
            echo "DB_NAME=labo05_db"
            echo "DB_USER=labo05"
            echo "DB_PASS=${{ secrets.DB_PASS }}"
            echo "REDIS_HOST=127.0.0.1"
            echo "REDIS_PORT=6379"
            echo "REDIS_DB=0"
          } >> .env

      - name: Install MySQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y default-mysql-client

      - name: Wait for MySQL healthy
        run: |
          for i in {1..60}; do
            if mysqladmin ping -h 127.0.0.1 -uroot -p"${{ secrets.DB_ROOT_PASSWORD }}" --silent; then
              echo "MySQL is up!"
              break
            fi
            echo "Waiting for MySQL ($i/60)..."
            sleep 2
          done

      - name: Initialize database schema
        run: |
          mysql --protocol=tcp -h 127.0.0.1 -uroot -p"${{ secrets.DB_ROOT_PASSWORD }}" labo05_db < db-init/init.sql

      - name: Run tests
        working-directory: src
        run: |
          python -m pytest -v

  deploy:
    needs: test
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Create .env file on VM
        run: |
          {
            echo "DB_HOST=127.0.0.1"
            echo "DB_PORT=3306"
            echo "DB_NAME=labo05_db"
            echo "DB_USER=labo05"
            echo "DB_PASS=${{ secrets.DB_PASS }}"
          } > .env

      - name: Install dependencies on VM
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run deployment script
        env:
          DB_ROOT_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}
        run: |
          chmod +x deploy.sh
          ./deploy.sh
